- name: Deploy to EC2
  hosts: localhost
  connection: local
  
  tasks:
    - name: Launch EC2 instance
      ec2:
        instance_type: t2.micro
        image: ami-085925f297f89fce1
        region: us-east-1
        key_name: presentation
        vpc_subnet_id: subnet-081eed6e
        assign_public_ip: yes
        wait: yes
        count: 1
        group: eshop
        aws_access_key: "ASIA4X2L4Z36NSWTF5EV"
        aws_secret_key: "vIpkdteH5DYAFE6cCIQKbQln7Cf56y7q+qR/DjXH"
        security_token: "FwoGZXIvYXdzEJj//////////wEaDLxYi4RgX4/PX1RPWSLGAaklysN6yffd9S45JoXSM8GTAqgR3gtYeBP68AoR4h8I54kv0uP3A+rp4wq9JkKUXtLHItkWooVUnePDBTZszYe05yx7duycEWyljetblO5VOgWru5kDOKsx/F2aPUA1bG7ATZMf/6M2LnlGrarLguwa6DlCd/+U53lJgvfcfYbCgF84x58d45gE9OZXX9It91KkO4UMol0Th1Ii5pBEaANepiFDcKThCnJFjoOeDqQVYWQAaNi+ABoqubxcKIzlmHSHXyhG2CjS44j2BTItUxH57LBbQfEcYpgYkCWfUtdSvW0PIPYN0mpZbLZ7dndl+Zu+vBseMXUgeid2"        
      register: ec2
      
    - name: Add instance host to group
      add_host: hostname={{ item.public_dns_name }} groupname=launched
      with_items: '{{ec2.instances}}'
      
    - name: Wait for SSH connection
      wait_for: host={{ item.public_dns_name }} port=22 delay=30 timeout=300 state=started
      with_items: '{{ec2.instances}}'

- name: Configure EC2      
  hosts: launched
  connection: ssh
  
  tasks:
    - name: Install docker
      apt:
        name: docker.io
        state: present
        update_cache: yes
      become: yes
    - service:
        name: docker
        state: started
        enabled: yes
      become: yes
    - name: Get project files from git
      git: 
        repo: 'https://github.com/linm02/4IT572_docker.git'
        dest: ./app
    - name: Build docker with eshop
      shell: cd app && docker build -t myeshop:latest .
      become: yes
    - name: Run Docker with eshop
      shell: docker run -p 80:3000 myeshop
      async: 45
      poll: 0
      become: yes
    - wait_for:
        port: 80