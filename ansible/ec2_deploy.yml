- name: Deploy to EC2
  hosts: localhost
  connection: local
  
  tasks:
    - name: Launch EC2 instance
      ec2:
        instance_type: t2.micro
        image: ami-085925f297f89fce1
        
        region: us-east-1
        key_name: presentation
        vpc_subnet_id: subnet-081eed6e
        assign_public_ip: yes
        wait: yes
        group: eshop
        aws_access_key: "ASIA4X2L4Z36MB4RARUU"
        aws_secret_key: "GfI1FwzZ5a6VOEkWbgvORmDKgp+Ahzczszs1LFHv"
        security_token: "FwoGZXIvYXdzEKb//////////wEaDG4TAVfcoXkydTtqqyLGAVrBQ7d6LUjIFV0xX3LWosVFfhaSJ2EeTFwis2bQB9IwTPnW0oqoDiotQpXKezjUuKPyZRTo33zJEEOze7hemX/lelqpyVyzVsG2iVLvxeKavu+HGv12zeRtlx8G6HYiaT5qcGwb8+3mrq3FbgGDmTMA4L88AByq4+mRnLqd5i1svZcyr+8ZtjN0wyc3B6DsLT6D0NStTLHxLXGiE8HfNZ943g30Y5LQXZLeUlegPhdtW9ZllaMhk8YUgzkIAAjTWAlM+DYMACjr24v2BTItS8sSUbH6XOQj5XZOFCucXKThkeTyOS5G6bxQkvRifMxs3zyrIzbOotXeakaw"
        exact_count: 1
        count_tag:
          Name: eshop
        instance_tags:
          Name: eshop        
      register: ec2
      
    - name: Add instance host to group
      add_host: hostname={{ item.public_dns_name }} groupname=launched
      with_items: '{{ec2.instances}}'
      
    - name: Wait for SSH connection
      wait_for: host={{ item.public_dns_name }} port=22 delay=30 timeout=300 state=started
      with_items: '{{ec2.instances}}'

- name: Configure EC2      
  hosts: launched
  connection: ssh
  
  tasks:
    - name: Install docker
      apt:
        name: docker.io
        state: present
        update_cache: yes
      become: yes
    - service:
        name: docker
        state: started
        enabled: yes
      become: yes
    - name: Get project files from git
      git: 
        repo: 'https://github.com/linm02/4IT572_final.git'
        dest: ./app
    - name: Build docker with eshop
      shell: cd app && docker build -t myeshop:latest .
      become: yes
    - name: Run Docker with eshop
      shell: docker run -p 80:3000 myeshop
      async: 45
      poll: 0
      become: yes
    - wait_for:
        port: 80